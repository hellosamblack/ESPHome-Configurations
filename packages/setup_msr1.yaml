# ESPHome configuration
esphome:
  platformio_options:
    board_build.flash_mode: dio

  on_boot:
  - priority: 900.0
    then:
      - lambda: |-
          id(radar_bluetooth).turn_off();

# ESP32 board configuration
esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Captive portal for WiFi configuration
captive_portal:

# Web server configuration
web_server:
  port: 80

# API configuration
api:
  on_client_connected:
    - delay: 1s
    - light.turn_off: rgb_light
    - lambda: 'id(cycleCounter) = 30;'
  services:
    - service: play_buzzer
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'

    # CO2 Calibration Service
    - service: calibrate_co2_value
      variables:
        co2_ppm: float
      then:
        - scd4x.perform_forced_calibration:
            value: !lambda 'return co2_ppm;'
            id: scd40

    # Setting HLK Password
    - service: set_ld2410_bluetooth_password
      variables:
        password: string
      then:
        - bluetooth_password.set:
            id: ld2410_radar
            password: !lambda 'return password;'

# Global variables
globals:
  - id: cycleCounter
    type: int
    restore_value: no
    initial_value: '0'
  - id: button_press_timestamp
    restore_value: no
    type: uint32_t
    initial_value: '0'

# I2C bus configuration
i2c:
  sda: GPIO1
  scl: GPIO0
  id: bus_a

# UART configuration
uart:
  tx_pin: GPIO21
  rx_pin: GPIO20
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

# Number entities for BME280 sensor offsets
number:
  - platform: template
    name: BME280 Humidity Offset
    id: bme280_humidity_offset
    restore_value: true
    initial_value: -18.86
    min_value: -70.0
    max_value: 70.0
    entity_category: "CONFIG"
    unit_of_measurement: "%"
    optimistic: true
    update_interval: never
    step: 0.1
    mode: box

  - platform: template
    name: BME280 Temperature Offset
    id: bme280_temperature_offset
    restore_value: true
    initial_value: 14.54
    min_value: -70.0
    max_value: 70.0
    entity_category: "CONFIG"
    unit_of_measurement: "Â°C"
    optimistic: true
    update_interval: never
    step: 0.1
    mode: box

# Buzzer configuration
output:
  - platform: ledc
    pin: GPIO10
    id: buzzer

# RTTTL configuration for buzzer
rtttl:
  output: buzzer

# Binary sensors
binary_sensor:
  # Status binary sensor
  - platform: status
    name: Online
    id: ink_ha_connected

  # GPIO binary sensor for reset button
  - platform: gpio
    pin: 
      number: GPIO9
      inverted: true
      ignore_strapping_warning: true
      mode:
        input: true
        pullup: true
    id: reset_button
    on_press:
      then:
        - lambda: |-
            id(button_press_timestamp) = millis();
            
    on_release:
      then:
        - lambda: |-
            if (millis() - id(button_press_timestamp) >= 5000) {
              // Remove Wifi
              id(factory_reset_switch).turn_on();
            }

# Sensors
sensor:
  # SCD4x CO2 sensor
  - platform: scd4x
    id: scd40
    co2:
      name: "CO2"
      id: "co2"
      filters:
        - sliding_window_moving_average:
            window_size: 15
            send_every: 1
    automatic_self_calibration: false
    update_interval: 60s
    measurement_mode: "periodic"
    i2c_id: bus_a
    ambient_pressure_compensation_source: bme280pressure

  # BME280 sensor for temperature, pressure, and humidity
  - platform: bme280_i2c
    id: bme_280
    temperature:
      name: "Temperature"
      id: bme280temperature
      filters:
        - lambda: return x - id(bme280_temperature_offset).state;
    pressure:
      name: "Pressure"
      id: bme280pressure
    humidity:
      name: "Humidity"
      id: bme280humidity
      filters:
        - lambda: return x - id(bme280_humidity_offset).state;
    update_interval: 60s
    i2c_id: bus_a
    address: 0x76

  # LTR390 sensor for UV index and ambient light
  - platform: ltr390
    id: ltr_390
    uv_index:
      name: "UV Index"
      id: ltr390uvindex
    light:
      name: "Ambient Light"
      id: ltr390light
    update_interval: 5s

# Light configuration for RGB light
light:
  - platform: neopixelbus
    id: rgb_light
    type: GRB
    variant: WS2812x
    pin: GPIO3
    num_leds: 1
    name: "RGB Light"
    method:
      type: esp32_rmt
      channel: 0

# Button configuration for SCD40 calibration
button:
  - platform: template
    name: "Calibrate SCD40 To 420ppm"
    id: set_SCD40_calibrate
    on_press:
      - scd4x.perform_forced_calibration:
          value: 420
          id: scd40

# Switch configuration for startup light blink
switch:
  - platform: template
    name: "Startup Light Blink"
    id: startup_light_blink
    icon: mdi:lightbulb
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    entity_category: "config"

# Interval actions for controlling RGB light on startup
interval:
  - interval: 1s
    then:
      - if:
          condition:
            - binary_sensor.is_off: ink_ha_connected
            - lambda: 'return id(cycleCounter) < 30;'
            - switch.is_on: startup_light_blink
          then:
            - light.toggle:
                id: rgb_light
            - lambda: 'id(cycleCounter) += 1;'

  - interval: 1s
    then:
      - if:
          condition:
            - binary_sensor.is_off: ink_ha_connected
            - lambda: 'return id(cycleCounter) > 30;'
            - lambda: 'return id(cycleCounter) < 31;'
            - switch.is_on: startup_light_blink
          then:
            - light.turn_off:
                id: rgb_light
            - lambda: 'id(cycleCounter) += 1;'
