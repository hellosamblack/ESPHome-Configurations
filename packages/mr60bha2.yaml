# external_components:
#   - source:
#       type: git
#       url: https://github.com/hellosamblack/esphome-configurations
#       ref: main
#     components: [ sam_seeed_mr60bha2 ]
#     refresh: 0min

sam_seeed_mr60bha2:

logger:
  logs:
      bh1750.sensor: INFO

binary_sensor:
  - platform: sam_seeed_mr60bha2
    has_target:
      name: "Person Detected (Raw)"
      id: person_detected_raw
      device_class: occupancy
      #entity_category: "diagnostic"

  - platform: template
    id: stuck_distance_detected
    name: "Stuck Distance Detected"
    lambda: |-
      static float last_distance = 0;
      static uint32_t last_change = 0;
      // Check if the distance has changed
      if (id(distance).state != last_distance) {
        last_distance = id(distance).state;
        last_change = id(global_time).now().timestamp;
      }
      // Return true if the distance hasn't changed for more than 600 seconds and person_detected_raw is true
      return (id(global_time).now().timestamp - last_change) > 600 && id(person_detected_raw).state;
    device_class: problem
    on_press:
      then:
        - if:
            condition:
              - binary_sensor.is_on: stuck_distance_detected
              - switch.is_on: enable_stuck_distance_flash
            then:
              - light.turn_on:
                  id: led_ring
                  effect: Stuck Distance Flash

  - platform: template
    id: person_detected
    name: "Person Detected"
    device_class: occupancy
    icon: mdi:account
    lambda: |-
      if (id(stuck_distance_detected).state) {
        return false;
      } else {
        return id(person_detected_raw).state;
      }
    filters:
      - delayed_off: 60s
    on_press:
      then:
        - if:
            condition:
              - switch.is_on: enable_person_detected_flash
            then:
              - light.turn_on:
                  id: led_ring
                  effect: Person Detected Flash
    on_release:
      then:
        - if:
            condition:
              - switch.is_on: enable_person_detected_flash
            then:
              - light.turn_on:
                  id: led_ring
                  effect: Person Detected Off Flash

  - platform: homeassistant
    id: sleeping
    entity_id: input_boolean.sleeping
    internal: true
    on_press:
      then:
        - if:
            condition:
              - switch.is_on: enable_sleeping_effect
            then:
              - light.turn_on:
                  id: led_ring
                  effect: Sleeping Effect On
    on_release:
      then:
        - if:
            condition:
              - switch.is_on: enable_sleeping_effect
            then:
              - light.turn_on:
                  id: led_ring
                  effect: Sleeping Effect Off

switch:
  - platform: template
    name: "Enable Person Detected Flash"
    id: enable_person_detected_flash
    icon: mdi:toggle-switch
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    entity_category: "config"

  - platform: template
    name: "Enable Stuck Distance Flash"
    id: enable_stuck_distance_flash
    icon: mdi:toggle-switch
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    entity_category: "config"

  - platform: template
    name: "Enable Sleeping Effect"
    id: enable_sleeping_effect
    icon: mdi:toggle-switch
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    entity_category: "config"

light:
  - platform: esp32_rmt_led_strip
    id: led_ring
    name: "Front LED"
    pin: GPIO1
    num_leds: 1
    rgb_order: GRB
    chipset: ws2812
    effects:
      - pulse:
          name: "Fast Pulse"
          transition_length: 0.5s
          update_interval: 0.5s
          min_brightness: 0%
          max_brightness: 100%
      - pulse:
          name: "Slow Pulse"
          transition_length: 500ms
          update_interval: 2s
      - pulse:
          name: "Asymmetrical Pulse"
          transition_length:
            on_length: 1s
            off_length: 500ms
          update_interval: 1.5s
      - lambda:
          name: "Distance Visualization"
          update_interval: 1s
          lambda: |-
            if (id(person_detected_raw).state) {
              float distance_var = id(distance).state;
              float brightness = (distance_var / 10.0) * 89.0 + 11.0; // Map distance 0-10 to brightness 11-100
              int red = (int)(100.0 * (1 - (distance_var / 10.0)));
              int green = (int)(100.0 * (distance_var / 10.0));
              int blue = (int)(100.0 * (distance_var / 10.0));
              auto call = id(led_ring).turn_on();
              call.set_brightness(brightness / 100.0);
              call.set_rgb(red / 100.0, green / 100.0, blue / 100.0);
              call.perform(); 
            } else {
              id(led_ring).turn_off();
            }
      - lambda:
          name: "Stuck Distance Flash"
          update_interval: never
          lambda: |-
            for (int i = 0; i < 3; i++) {
              id(led_ring).turn_on().set_rgb(1.0, 0.0, 0.0).set_brightness(1.0).perform();
              delay(250);
              id(led_ring).turn_off().perform();
              delay(250);
            } 
      - lambda:
          name: "Person Detected Flash"
          update_interval: never
          lambda: |-
            id(led_ring).turn_on().set_rgb(0.0, 1.0, 0.0).set_brightness(1.0).perform();
            delay(500);
            id(led_ring).turn_off().perform();
      - lambda:
          name: "Person Detected Off Flash"
          update_interval: never
          lambda: |-
            id(led_ring).turn_on().set_rgb(1.0, 0.0, 0.0).set_brightness(1.0).perform();
            delay(500);
            id(led_ring).turn_off().perform();
      - lambda:
          name: "Sleeping Effect On"
          update_interval: never
          lambda: |- 
            auto call = id(led_ring).turn_on();
            call.set_rgb(1.0, 1.0, 0.0).set_brightness(0.5).set_transition_length(5000).perform();
      - lambda:
          name: "Sleeping Effect Off"
          update_interval: never
          lambda: |- 
            auto call = id(led_ring).turn_off();
            call.set_transition_length(5000).perform();

sensor:
  - platform: bh1750
    name: "Ambient Light"
    address: 0x23
    update_interval: 1s
    accuracy_decimals: 0
    device_class: illuminance
    id: illuminance
    state_class: measurement
    filters:
        - or: 
          - delta: 10%
          - heartbeat: 15s

  - platform: sam_seeed_mr60bha2
    breath_rate:
      name: "Respiratory Rate"
      id: respiratory_rate
      state_class: measurement
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 5
        - or:
          - delta: 2
          - heartbeat: 15s
    heart_rate:
      name: "Heart Rate"
      id: heart_rate
      state_class: measurement
      accuracy_decimals: 0
      filters:
        - exponential_moving_average:
            alpha: 0.1
            send_every: 5
        - or: 
          - delta: 5
          - heartbeat: 15s
    distance:
      name: "Distance"
      id: distance
      unit_of_measurement: ft
      accuracy_decimals: 1
      filters:
        - multiply: .0328084 # Convert centimeters to feet
        - or: 
          - delta: 10%
          - heartbeat: 15s

    num_targets:
      name: "Number of Targets"
      id: number_of_targets
      unit_of_measurement: "People"
      state_class: measurement
      accuracy_decimals: 0
      filters:
        - or: 
          - delta: 1
          - heartbeat: 15s
