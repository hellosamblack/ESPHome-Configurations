ld2410:
  id: ld2410_radar


# Numbers For Configuration
number:
  - platform: ld2410
    timeout:
      name: Radar Timeout
    max_move_distance_gate:
      name: Radar Max Move Distance
    max_still_distance_gate:
      name: Radar Max Still Distance
    g0:
      move_threshold:
        name: G0 Move Threshold
        id: g0_move_threshold
      still_threshold:
        name: G0 Still Threshold
        id: g0_still_threshold
    g1:
      move_threshold:
        name: G1 Move Threshold
        id: g1_move_threshold
      still_threshold:
        name: G1 Still Threshold
        id: g1_still_threshold
    g2:
      move_threshold:
        name: G2 Move Threshold
        id: g2_move_threshold
      still_threshold:
        name: G2 Still Threshold
        id: g2_still_threshold
    g3:
      move_threshold:
        name: G3 Move Threshold
        id: g3_move_threshold
      still_threshold:
        name: G3 Still Threshold
        id: g3_still_threshold
    g4:
      move_threshold:
        name: G4 Move Threshold
        id: g4_move_threshold
      still_threshold:
        name: G4 Still Threshold
        id: g4_still_threshold
    g5:
      move_threshold:
        name: G5 Move Threshold
        id: g5_move_threshold
      still_threshold:
        name: G5 Still Threshold
        id: g5_still_threshold
    g6:
      move_threshold:
        name: G6 Move Threshold
        id: g6_move_threshold
      still_threshold:
        name: G6 Still Threshold
        id: g6_still_threshold
    g7:
      move_threshold:
        name: G7 Move Threshold
        id: g7_move_threshold
      still_threshold:
        name: G7 Still Threshold
        id: g7_still_threshold
    g8:
      move_threshold:
        name: G8 Move Threshold
        id: g8_move_threshold
      still_threshold:
        name: G8 Still Threshold
        id: g8_still_threshold

# Setting start of zone 1 occupancy
  - platform: template
    name: "Radar Zone 1 Start"
    id: radar_z1_start
    device_class: distance
    min_value: 0
    max_value: 800
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG
    unit_of_measurement: "cm"

  # Setting ending of zone 1 occupancy
  - platform: template
    name: "Radar End Zone 1"
    id: radar_z1_end
    device_class: distance
    min_value: 0
    max_value: 800
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 50
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG
    unit_of_measurement: "cm"

  # Setting ending of zone 2 occupancy
  - platform: template
    name: "Radar End Zone 2"
    id: radar_z2_end
    device_class: distance
    min_value: 0
    max_value: 800
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 150
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG
    unit_of_measurement: "cm"

  # Setting ending of zone 3 occupancy
  - platform: template
    name: "Radar End Zone 3"
    id: radar_z3_end
    device_class: distance
    min_value: 0
    max_value: 800
    step: 1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 250
    icon: "mdi:arrow-collapse-right"
    entity_category: CONFIG
    unit_of_measurement: "cm"

binary_sensor:
  - platform: ld2410
    has_target:
      name: Radar Target
      id: radar_has_target
    has_moving_target:
      name: Radar Moving Target
      id: radar_has_moving_target
    has_still_target:
      name: Radar Still Target
      id: radar_has_still_target
  ## Set Up Radar Zones Based On Distance
  - platform: template
    name: "Radar Zone 1 Occupancy"
    id: radar_zone_1_occupancy
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(radar_has_target).state) && ((id(radar_detection_distance).state < id(radar_z1_end).state) && (id(radar_detection_distance).state > id(radar_z1_start).state))){
        return true;
      } else {
        return false;
      }
  - platform: template
    name: "Radar Zone 2 Occupancy"
    id: radar_zone_2_occupancy
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(radar_has_target).state) && ((id(radar_z1_end).state < id(radar_detection_distance).state) && (id(radar_detection_distance).state < id(radar_z2_end).state))) {
        return true;
      } else {
        return false;
      }
  - platform: template
    name: "Radar Zone 3 Occupancy"
    id: radar_zone_3_occupancy
    device_class: occupancy
    icon: mdi:motion-sensor
    lambda: |-
      if ((id(radar_has_target).state) && ((id(radar_z2_end).state < id(radar_detection_distance).state) && (id(radar_detection_distance).state < id(radar_z3_end).state))) {
        return true;
      } else {
        return false;
      }

sensor:

  - platform: ld2410
    moving_distance:
      name: Radar Moving Distance
      id: moving_distance
    still_distance:
      name: Radar Still Distance
      id: still_distance
    moving_energy:
      name: Radar Move Energy
      id: radar_moving_energy
    still_energy:
      name: Radar Still Energy
      id: radar_still_energy
    detection_distance:
      name: Radar Detection Distance
      id: radar_detection_distance
    g0:
      move_energy:
        name: G0 Move Energy
        id: g0_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G0 Still Energy
        id: g0_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
    g1:
      move_energy:
        name: G1 Move Energy
        id: g1_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G1 Still Energy
        id: g1_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
    g2:
      move_energy:
        name: G2 Move Energy
        id: g2_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G2 Still Energy
        id: g2_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
    g3:
      move_energy:
        name: G3 Move Energy
        id: g3_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G3 Still Energy
        id: g3_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
    g4:
      move_energy:
        name: G4 Move Energy
        id: g4_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G4 Still Energy
        id: g4_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
    g5:
      move_energy:
        name: G5 Move Energy
        id: g5_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G5 Still Energy
        id: g5_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
    g6:
      move_energy:
        name: G6 Move Energy
        id: g6_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G6 Still Energy
        id: g6_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
    g7:
      move_energy:
        name: G7 Move Energy
        id: g7_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G7 Still Energy
        id: g7_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
    g8:
      move_energy:
        name: G8 Move Energy
        id: g8_move_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false
      still_energy:
        name: G8 Still Energy
        id: g8_still_energy
        state_class: measurement
        entity_category: "diagnostic"
        internal: false

  - platform: template
    name: "Motion Gate Number"
    state_class: measurement
    accuracy_decimals: 0
    entity_category: ""
    lambda: |-
      // Array of gate energies (you can use move_energy or still_energy, adjust as needed)
      float gate_energies[9] = {
          id(g0_move_energy).state,
          id(g1_move_energy).state,
          id(g2_move_energy).state,
          id(g3_move_energy).state,
          id(g4_move_energy).state,
          id(g5_move_energy).state,
          id(g6_move_energy).state,
          id(g7_move_energy).state,
          id(g8_move_energy).state
      };
      
      // Variable to track the largest energy and its index
      float max_energy = -1.0;
      int max_index = -1;

      for (int i = 0; i < 9; i++) {
        if (gate_energies[i] > max_energy) {
          max_energy = gate_energies[i];
          max_index = i;
        }
      }
      return max_index;
    update_interval: 1s
  
  - platform: template
    name: "Motion Gate Energy"
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: ""
    lambda: |-
        // Array of gate energies
        float gate_energies[9] = {
          id(g0_move_energy).state,
          id(g1_move_energy).state,
          id(g2_move_energy).state,
          id(g3_move_energy).state,
          id(g4_move_energy).state,
          id(g5_move_energy).state,
          id(g6_move_energy).state,
          id(g7_move_energy).state,
          id(g8_move_energy).state
        };

        // Variable to track the largest energy
        float max_energy = -1.0;

        for (int i = 0; i < 9; i++) {
          if (gate_energies[i] > max_energy) {
            max_energy = gate_energies[i];
          }
        }

        // Return the maximum energy
        return max_energy;
    update_interval: 1s

  - platform: template
    name: "Still Gate Number"
    state_class: measurement
    accuracy_decimals: 0
    entity_category: ""
    lambda: |-
      // Array of gate energies (you can use move_energy or still_energy, adjust as needed)
      float gate_energies[9] = {
          id(g0_still_energy).state,
          id(g1_still_energy).state,
          id(g2_still_energy).state,
          id(g3_still_energy).state,
          id(g4_still_energy).state,
          id(g5_still_energy).state,
          id(g6_still_energy).state,
          id(g7_still_energy).state,
          id(g8_still_energy).state
      };
      
      // Variable to track the largest energy and its index
      float max_energy = -1.0;
      int max_index = -1;

      for (int i = 0; i < 9; i++) {
        if (gate_energies[i] > max_energy) {
          max_energy = gate_energies[i];
          max_index = i;
        }
      }
      return max_index;
    update_interval: 1s
  
  - platform: template
    name: "Still Gate Energy"
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: ""
    lambda: |-
        // Array of gate energies
        float gate_energies[9] = {
          id(g0_still_energy).state,
          id(g1_still_energy).state,
          id(g2_still_energy).state,
          id(g3_still_energy).state,
          id(g4_still_energy).state,
          id(g5_still_energy).state,
          id(g6_still_energy).state,
          id(g7_still_energy).state,
          id(g8_still_energy).state
        };

        // Variable to track the largest energy
        float max_energy = -1.0;

        for (int i = 0; i < 9; i++) {
          if (gate_energies[i] > max_energy) {
            max_energy = gate_energies[i];
          }
        }

        // Return the maximum energy
        return max_energy;
    update_interval: 1s
    # Track the max value of g0_still_energy
  - platform: template
    name: "G0 Still Max Energy"
    id: g0_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g0_still_energy).state > id(g0_still_max_energy).state) {
        return id(g0_still_energy).state;
      } else {
        return id(g0_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
    
  - platform: template
    name: "G0 Move Max Energy"
    id: g0_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g0_move_energy).state > id(g0_move_max_energy).state) {
        return id(g0_move_energy).state;
      } else {
        return id(g0_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  

  # Track the max value of g1_still_energy
  - platform: template
    name: "G1 Still Max Energy"
    id: g1_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g1_still_energy).state > id(g1_still_max_energy).state) {
        return id(g1_still_energy).state;
      } else {
        return id(g1_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
    
  - platform: template
    name: "G1 Move Max Energy"
    id: g1_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g1_move_energy).state > id(g1_move_max_energy).state) {
        return id(g1_move_energy).state;
      } else {
        return id(g1_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  

  # Track the max value of g2_still_energy
  - platform: template
    name: "G2 Still Max Energy"
    id: g2_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g2_still_energy).state > id(g2_still_max_energy).state) {
        return id(g2_still_energy).state;
      } else {
        return id(g2_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
    
  - platform: template
    name: "G2 Move Max Energy"
    id: g2_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g2_move_energy).state > id(g2_move_max_energy).state) {
        return id(g2_move_energy).state;
      } else {
        return id(g2_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  

  # Track the max value of g3_still_energy
  - platform: template
    name: "G3 Still Max Energy"
    id: g3_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g3_still_energy).state > id(g3_still_max_energy).state) {
        return id(g3_still_energy).state;
      } else {
        return id(g3_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
    
  - platform: template
    name: "G3 Move Max Energy"
    id: g3_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g3_move_energy).state > id(g3_move_max_energy).state) {
        return id(g3_move_energy).state;
      } else {
        return id(g3_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  

  # Track the max value of g4_still_energy
  - platform: template
    name: "G4 Still Max Energy"
    id: g4_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g4_still_energy).state > id(g4_still_max_energy).state) {
        return id(g4_still_energy).state;
      } else {
        return id(g4_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
    
  - platform: template
    name: "G4 Move Max Energy"
    id: g4_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g4_move_energy).state > id(g4_move_max_energy).state) {
        return id(g4_move_energy).state;
      } else {
        return id(g4_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  

  # Track the max value of g5_still_energy
  - platform: template
    name: "G5 Still Max Energy"
    id: g5_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g5_still_energy).state > id(g5_still_max_energy).state) {
        return id(g5_still_energy).state;
      } else {
        return id(g5_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
    
  - platform: template
    name: "G5 Move Max Energy"
    id: g5_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g5_move_energy).state > id(g5_move_max_energy).state) {
        return id(g5_move_energy).state;
      } else {
        return id(g5_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
    

  # Track the max value of g6_still_energy
  - platform: template
    name: "G6 Still Max Energy"
    id: g6_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g6_still_energy).state > id(g6_still_max_energy).state) {
        return id(g6_still_energy).state;
      } else {
        return id(g6_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
    
  - platform: template
    name: "G6 Move Max Energy"
    id: g6_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g6_move_energy).state > id(g6_move_max_energy).state) {
        return id(g6_move_energy).state;
      } else {
        return id(g6_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  

      
  # Track the max value of g7_still_energy
  - platform: template
    name: "G7 Still Max Energy"
    id: g7_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g7_still_energy).state > id(g7_still_max_energy).state) {
        return id(g7_still_energy).state;
      } else {
        return id(g7_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60  
      
  - platform: template
    name: "G7 Move Max Energy"
    id: g7_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g7_move_energy).state > id(g7_move_max_energy).state) {
        return id(g7_move_energy).state;
      } else {
        return id(g7_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60


  # Track the max value of g8_still_energy
  - platform: template
    name: "G8 Still Max Energy"
    id: g8_still_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g8_still_energy).state > id(g8_still_max_energy).state) {
        return id(g8_still_energy).state;
      } else {
        return id(g8_still_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60
    
  - platform: template
    name: "G8 Move Max Energy"
    id: g8_move_max_energy
    state_class: measurement
    unit_of_measurement: "%"
    accuracy_decimals: 0
    entity_category: "diagnostic"
    update_interval: 1s
    lambda: |-
      if (id(g8_move_energy).state > id(g8_move_max_energy).state) {
        return id(g8_move_energy).state;
      } else {
        return id(g8_move_max_energy).state;
      }
    filters:
      - max:
          window_size: 60
          send_every: 60

button:

  - platform: ld2410
    factory_reset:
      name: "Factory Reset Radar"
    restart:
      name: "Restart Radar"
    query_params:
      name: query params

switch:
  - platform: ld2410
    bluetooth:
      name: "Radar Control Bluetooth"
      id: radar_bluetooth
    engineering_mode:
      name: "Radar Engineering Mode"
      id: radar_engineering_mode
      on_turn_on:
        then:
            - lambda: |-
                id(g0_still_max_energy).publish_state(0.0);
                id(g0_move_max_energy).publish_state(0.0);
                id(g1_still_max_energy).publish_state(0.0);
                id(g1_move_max_energy).publish_state(0.0);
                id(g2_still_max_energy).publish_state(0.0);
                id(g2_move_max_energy).publish_state(0.0);
                id(g3_still_max_energy).publish_state(0.0);
                id(g3_move_max_energy).publish_state(0.0);
                id(g4_still_max_energy).publish_state(0.0);
                id(g4_move_max_energy).publish_state(0.0);
                id(g5_still_max_energy).publish_state(0.0);
                id(g5_move_max_energy).publish_state(0.0);
                id(g6_still_max_energy).publish_state(0.0);
                id(g6_move_max_energy).publish_state(0.0);
                id(g7_still_max_energy).publish_state(0.0);
                id(g7_move_max_energy).publish_state(0.0);
                id(g8_still_max_energy).publish_state(0.0);
                id(g8_move_max_energy).publish_state(0.0);
text_sensor:
  - platform: ld2410
    version:
      name: "Radar Firmware Version"

select:
  - platform: ld2410
    distance_resolution:
      name: "Radar Distance Resolution"
      disabled_by_default: true