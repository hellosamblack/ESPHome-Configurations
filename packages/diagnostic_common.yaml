external_components:
  - source:
      type: git
      url: https://github.com/hellosamblack/esphome-configurations
      ref: main
    components: [ git_ref ]
    refresh: 0min

# Define buttons for various actions
button:
  - platform: restart
    name: Restart
    icon: mdi:power-cycle

  - platform: factory_reset
    disabled_by_default: True
    name: "ESP32 Factory Reset"
    id: factory_reset_all

    icon: mdi:delete

# Define a switch for factory reset, used internally
switch:
  - platform: factory_reset
    id: factory_reset_switch
    internal: true

# Enable debug logging with an update interval of 30 seconds
debug:
  update_interval: 30s

# Define a time platform to sync with Home Assistant
time:
  - platform: homeassistant
    id: global_time

# Define sensors for various diagnostic metrics
sensor:

  # Internal temperature of the ESP
  - platform: internal_temperature
    name: "ESP32 Temperature"
    id: sys_esp_temperature

  # WiFi signal strength in dB
  - platform: wifi_signal
    name: "WiFi Signal dB"
    id: wifi_signal_db
    unit_of_measurement: "dB"
    update_interval: 60s
    entity_category: "diagnostic"
    internal: false

  # WiFi signal strength as a percentage
  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi Signal Strength"
    id: wifi_signal_strength
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: signal_strength

  # Uptime of the device
  - platform: uptime
    name: ESP32 Uptime
    entity_category: "diagnostic"

  # Debug information about heap memory and loop time
  - platform: debug
    free:
      name: "RAM Heap Free"
    block:
      name: "RAM Heap Max Block"
    loop_time:
      name: "ESP32 Loop Time"

  # Template sensor for the last update timestamp
  - platform: template
    name: "Last Update Timestamp"
    id: last_update_timestamp
    lambda: |-
      time_t now = id(global_time).now().timestamp;
      return now;
    update_interval: never
    device_class: timestamp

# Define text sensors for various diagnostic information
text_sensor:
  - platform: git_ref
    id: git_ref_id
    name: "${friendly_name} Git Ref"
    long: true
    all: true
    abbrev: 16
    dirty: "-dirty"

  # ESPHome project version (detailed)
  - platform: template
    name: "SW Version"
    id: esphome_project_version_text_detailed
    icon: "mdi:information-box"
    entity_category: "diagnostic"
    update_interval: 600s
    lambda: |-
      return { "FW: "+ ESPHOME_PROJECT_VERSION + "\n" + "Built: " + App.get_compilation_time() + "\n" + id(git_ref_id).state };

  # WiFi information including IP address, SSID, BSSID, MAC address, scan results, and DNS address
  - platform: wifi_info
    ip_address:
      name: Network IP Address
      address_0:
        name: Network IP Address
    ssid:
      name: WiFi Connected SSID
    bssid:
      name: WiFi Connected BSSID
    mac_address:
      name: Network MAC
    scan_results:
      name: WiFi SSIDs
    dns_address:
      name: Network DNS Address

  # Debug information about the device and reset reason
  - platform: debug
    device:
      name: "ESP32 Info"
    reset_reason:
      name: "ESP32 Reset Reason"